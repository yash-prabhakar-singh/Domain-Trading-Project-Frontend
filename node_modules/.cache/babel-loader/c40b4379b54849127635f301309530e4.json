{"ast":null,"code":"import { __rest, __assign, __awaiter, __generator } from './_virtual/_tslib.js';\nimport FormControl from '@mui/material/FormControl';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport InputLabel from '@mui/material/InputLabel';\nimport MuiSelect from '@mui/material/Select';\nimport { getIn } from 'formik';\nimport * as React from 'react';\n\nfunction fieldToSelect(_a) {\n  var _this = this;\n\n  var disabled = _a.disabled,\n      _b = _a.field;\n  _b.onBlur;\n\n  var fieldOnChange = _b.onChange,\n      field = __rest(_b, [\"onBlur\", \"onChange\"]),\n      _c = _a.form,\n      isSubmitting = _c.isSubmitting,\n      touched = _c.touched,\n      errors = _c.errors,\n      setFieldTouched = _c.setFieldTouched,\n      setFieldValue = _c.setFieldValue,\n      onClose = _a.onClose,\n      props = __rest(_a, [\"disabled\", \"field\", \"form\", \"onClose\"]);\n\n  var fieldError = getIn(errors, field.name);\n  var showError = getIn(touched, field.name) && !!fieldError;\n  return __assign(__assign({\n    disabled: disabled !== null && disabled !== void 0 ? disabled : isSubmitting,\n    error: showError,\n    formError: showError ? fieldError : undefined,\n    onBlur: function () {},\n    onChange: fieldOnChange !== null && fieldOnChange !== void 0 ? fieldOnChange : function () {},\n    onClose: onClose !== null && onClose !== void 0 ? onClose : function (e) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var dataset;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              dataset = e.target.dataset;\n              if (!(dataset && dataset.value)) return [3, 2];\n              return [4, setFieldValue(field.name, dataset.value, false)];\n\n            case 1:\n              _a.sent();\n\n              _a.label = 2;\n\n            case 2:\n              setFieldTouched(field.name, true, true);\n              return [2];\n          }\n        });\n      });\n    }\n  }, field), props);\n}\n\nfunction Select(_a) {\n  var formControl = _a.formControl,\n      inputLabel = _a.inputLabel,\n      formHelperText = _a.formHelperText,\n      selectProps = __rest(_a, [\"formControl\", \"inputLabel\", \"formHelperText\"]);\n\n  var _b = fieldToSelect(selectProps),\n      error = _b.error,\n      formError = _b.formError,\n      disabled = _b.disabled,\n      selectFieldProps = __rest(_b, [\"error\", \"formError\", \"disabled\"]);\n\n  var _c = formHelperText || {},\n      formHelperTextChildren = _c.children,\n      formHelperTextProps = __rest(_c, [\"children\"]);\n\n  var shouldDisplayFormHelperText = error || formHelperTextChildren;\n  return React.createElement(FormControl, __assign({\n    disabled: disabled,\n    error: error\n  }, formControl), React.createElement(InputLabel, __assign({\n    id: selectFieldProps.labelId\n  }, inputLabel), selectFieldProps.label), React.createElement(MuiSelect, __assign({}, selectFieldProps)), shouldDisplayFormHelperText && React.createElement(FormHelperText, __assign({}, formHelperTextProps), error ? formError : formHelperTextChildren));\n}\n\nSelect.displayName = 'FormikMaterialUISelect';\nexport { Select, fieldToSelect };","map":{"version":3,"mappings":";;;;;;;;SAiBgBA,cAAcC,IAU7B;EAVD;;MACEC,QAAQ;MACRC;EAA6DA;;EAArC,IAAYC,aAAa,cAAzB;EAAA,IAA8BC,KAAK,cAApD,sBAAoD,CAAnC;EAAA,IACxBC,YADwB;EAAA,IAChBC,YAAY,kBADI;EAAA,IACFC,OAAO,aADL;EAAA,IACOC,MAAM,YADb;EAAA,IACeC,eAAe,qBAD9B;EAAA,IACgCC,aAAa,mBAD7C;EAAA,IAExBC,OAAO,aAFiB;EAAA,IAGrBC,KAAK,cALoB,wCAKpB,CAHgB;;EASxB,IAAMC,UAAU,GAAGC,KAAK,CAACN,MAAD,EAASJ,KAAK,CAACW,IAAf,CAAxB;EACA,IAAMC,SAAS,GAAGF,KAAK,CAACP,OAAD,EAAUH,KAAK,CAACW,IAAhB,CAAL,IAA8B,CAAC,CAACF,UAAlD;EAEA;IACEZ,QAAQ,EAAEA,QAAQ,SAAR,YAAQ,WAAR,cAAYK,YADxB;IAEEW,KAAK,EAAED,SAFT;IAGEE,SAAS,EAAEF,SAAS,GAAGH,UAAH,GAAgBM,SAHtC;IAIEC,MAAM,EAAE,aAEP,CANH;IAOEC,QAAQ,EACNlB,aAAa,SAAb,iBAAa,WAAb,mBACC,aAEA,CAXL;IAaEQ,OAAO,EACLA,OAAO,SAAP,WAAO,WAAP,aACC,UAAOW,CAAP,EAA8B;MAAA;;;;;cAEvBC,OAAO,GAAID,CAAC,CAACE,MAAF,CAAiBD,OAA5B;oBACFA,OAAO,IAAIA,OAAO,CAACE,QAAnB;cAGF,WAAMf,aAAa,CAACN,KAAK,CAACW,IAAP,EAAaQ,OAAO,CAACE,KAArB,EAA4B,KAA5B,CAAnB;;;cAAAzB;;;;;cAEFS,eAAe,CAACL,KAAK,CAACW,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAAf;;;;OAR6B;IAS9B;EAxBL,GAyBKX,KAzBL,GA0BKQ,KA1BL;AA4BD;;SAEec,OAAO1B,IAKT;EAJZ,eAAW,iBAAX;EAAA,IACA2B,UAAU,gBADV;EAAA,IAEAC,cAAc,oBAFd;EAAA,IAGGC,WAAW,cAJO,+CAIP,CAHd;;EAKA,IAAM3B,KACJH,aAAa,CAAC8B,WAAD,CADf;EAAA,IAAQZ,KAAK,WAAb;EAAA,IAAeC,SAAS,eAAxB;EAAA,IAA0BjB,QAAQ,cAAlC;EAAA,IAAuC6B,gBAAgB,cAAjD,kCAAiD,CAAvD;;EAEA,IAAMzB,KACJuB,cAAc,IAAI,EADpB;EAAA,IAAkBG,sBAAsB,cAAxC;EAAA,IAA6CC,mBAAmB,cAA1D,YAA0D,CAAhE;;EAEA,IAAMC,2BAA2B,GAAGhB,KAAK,IAAIc,sBAA7C;EAEA,OACEG,oBAACC,WAAD,EAAYC;IAACnC,QAAQ,EAAEA,QAAX;IAAqBgB,KAAK,EAAEA;EAA5B,GAAuCoB,WAAvC,CAAZ,EACEH,oBAACI,UAAD,EAAWF;IAACG,EAAE,EAAET,gBAAgB,CAACU;EAAtB,GAAmCb,UAAnC,CAAX,EACGG,gBAAgB,CAACW,KADpB,CADF,EAIEP,oBAACQ,SAAD,EAAUN,aAAKN,gBAAL,CAAV,CAJF,EAKGG,2BAA2B,IAC1BC,oBAACS,cAAD,EAAeP,aAAKJ,mBAAL,CAAf,EACGf,KAAK,GAAGC,SAAH,GAAea,sBADvB,CANJ,CADF;AAaD;;AAEDL,MAAM,CAACkB,WAAP,GAAqB,wBAArB","names":["fieldToSelect","_a","disabled","_b","fieldOnChange","field","_c","isSubmitting","touched","errors","setFieldTouched","setFieldValue","onClose","props","fieldError","getIn","name","showError","error","formError","undefined","onBlur","onChange","e","dataset","target","value","Select","inputLabel","formHelperText","selectProps","selectFieldProps","formHelperTextChildren","formHelperTextProps","shouldDisplayFormHelperText","React","FormControl","__assign","formControl","InputLabel","id","labelId","label","MuiSelect","FormHelperText","displayName"],"sources":["C:\\Users\\Admin\\Desktop\\NameKart\\frontend\\node_modules\\formik-material-ui\\src\\Select.tsx"],"sourcesContent":["import FormControl, { FormControlProps } from '@mui/material/FormControl';\nimport FormHelperText, {\n  FormHelperTextProps,\n} from '@mui/material/FormHelperText';\nimport InputLabel, { InputLabelProps } from '@mui/material/InputLabel';\nimport MuiSelect, { SelectProps as MuiSelectProps } from '@mui/material/Select';\nimport { FieldProps, getIn } from 'formik';\nimport * as React from 'react';\n\nexport interface SelectProps\n  extends FieldProps,\n    Omit<MuiSelectProps, 'name' | 'value'> {\n  formControl?: FormControlProps;\n  formHelperText?: FormHelperTextProps;\n  inputLabel?: InputLabelProps;\n}\n\nexport function fieldToSelect({\n  disabled,\n  field: { onBlur: _onBlur, onChange: fieldOnChange, ...field },\n  form: { isSubmitting, touched, errors, setFieldTouched, setFieldValue },\n  onClose,\n  ...props\n}: Omit<\n  SelectProps,\n  'formControl' | 'formHelperText' | 'inputLabel'\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n>): MuiSelectProps & { formError: any } {\n  const fieldError = getIn(errors, field.name);\n  const showError = getIn(touched, field.name) && !!fieldError;\n\n  return {\n    disabled: disabled ?? isSubmitting,\n    error: showError,\n    formError: showError ? fieldError : undefined,\n    onBlur: () => {\n      // no-op\n    },\n    onChange:\n      fieldOnChange ??\n      (() => {\n        // no-op\n      }),\n    // we must use `onClose` instead of `onChange` to be able to trigger validation when users click outside of the select list.\n    onClose:\n      onClose ??\n      (async (e: React.SyntheticEvent) => {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const dataset = (e.target as any).dataset as DOMStringMap;\n        if (dataset && dataset.value) {\n          // out-of-sync issue since November 2019: https://github.com/formium/formik/issues/2059#issuecomment-890613538\n          // without the await, formik validates with the former value\n          await setFieldValue(field.name, dataset.value, false);\n        }\n        setFieldTouched(field.name, true, true);\n      }),\n    ...field,\n    ...props,\n  };\n}\n\nexport function Select({\n  formControl,\n  inputLabel,\n  formHelperText,\n  ...selectProps\n}: SelectProps) {\n  const { error, formError, disabled, ...selectFieldProps } =\n    fieldToSelect(selectProps);\n  const { children: formHelperTextChildren, ...formHelperTextProps } =\n    formHelperText || {};\n  const shouldDisplayFormHelperText = error || formHelperTextChildren;\n\n  return (\n    <FormControl disabled={disabled} error={error} {...formControl}>\n      <InputLabel id={selectFieldProps.labelId} {...inputLabel}>\n        {selectFieldProps.label}\n      </InputLabel>\n      <MuiSelect {...selectFieldProps} />\n      {shouldDisplayFormHelperText && (\n        <FormHelperText {...formHelperTextProps}>\n          {error ? formError : formHelperTextChildren}\n        </FormHelperText>\n      )}\n    </FormControl>\n  );\n}\n\nSelect.displayName = 'FormikMaterialUISelect';\n"]},"metadata":{},"sourceType":"module"}