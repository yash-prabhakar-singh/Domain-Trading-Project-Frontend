{"ast":null,"code":"import { __rest, __assign } from './_virtual/_tslib.js';\nimport * as React from 'react';\nimport MuiTextField from '@mui/material/TextField';\nimport { getIn } from 'formik';\n\nfunction fieldToTextField(_a) {\n  var disabled = _a.disabled,\n      _b = _a.field,\n      fieldOnBlur = _b.onBlur,\n      field = __rest(_b, [\"onBlur\"]),\n      _c = _a.form,\n      isSubmitting = _c.isSubmitting,\n      touched = _c.touched,\n      errors = _c.errors,\n      onBlur = _a.onBlur,\n      helperText = _a.helperText,\n      props = __rest(_a, [\"disabled\", \"field\", \"form\", \"onBlur\", \"helperText\"]);\n\n  var fieldError = getIn(errors, field.name);\n  var showError = getIn(touched, field.name) && !!fieldError;\n  return __assign(__assign({\n    error: showError,\n    helperText: showError ? fieldError : helperText,\n    disabled: disabled !== null && disabled !== void 0 ? disabled : isSubmitting,\n    onBlur: onBlur !== null && onBlur !== void 0 ? onBlur : function (e) {\n      fieldOnBlur(e !== null && e !== void 0 ? e : field.name);\n    }\n  }, field), props);\n}\n\nfunction TextField(_a) {\n  var children = _a.children,\n      props = __rest(_a, [\"children\"]);\n\n  return React.createElement(MuiTextField, __assign({}, fieldToTextField(props)), children);\n}\n\nTextField.displayName = 'FormikMaterialUITextField';\nexport { TextField, fieldToTextField };","map":{"version":3,"mappings":";;;;;SAUgBA,iBAAiBC,IAOhB;EANf,YAAQ,cAAR;EAAA,IACAC,aADA;EAAA,IACiBC,WAAW,YAD5B;EAAA,IACiCC,KAAK,cAA/B,UAA+B,CADtC;EAAA,IAEAC,YAFA;EAAA,IAEQC,YAAY,kBAFpB;EAAA,IAEsBC,OAAO,aAF7B;EAAA,IAE+BC,MAAM,YAFrC;EAAA,IAGAC,MAAM,YAHN;EAAA,IAIAC,UAAU,gBAJV;EAAA,IAKGC,KAAK,cANuB,qDAMvB,CALR;;EAOA,IAAMC,UAAU,GAAGC,KAAK,CAACL,MAAD,EAASJ,KAAK,CAACU,IAAf,CAAxB;EACA,IAAMC,SAAS,GAAGF,KAAK,CAACN,OAAD,EAAUH,KAAK,CAACU,IAAhB,CAAL,IAA8B,CAAC,CAACF,UAAlD;EAEA;IACEI,KAAK,EAAED,SADT;IAEEL,UAAU,EAAEK,SAAS,GAAGH,UAAH,GAAgBF,UAFvC;IAGEO,QAAQ,EAAEA,QAAQ,SAAR,YAAQ,WAAR,cAAYX,YAHxB;IAIEG,MAAM,EACJA,MAAM,SAAN,UAAM,WAAN,YACA,UAAUS,CAAV,EAAW;MACTf,WAAW,CAACe,CAAC,SAAD,KAAC,WAAD,OAAKd,KAAK,CAACU,IAAZ,CAAX;IACD;EARL,GASKV,KATL,GAUKO,KAVL;AAYD;;SAEeQ,UAAUlB,IAAsC;EAApC,YAAQ,cAAR;EAAA,IAAaU,KAAK,cAApB,YAAoB,CAAlB;;EAC1B,OAAOS,oBAACC,YAAD,EAAaC,aAAKtB,gBAAgB,CAACW,KAAD,CAArB,CAAb,EAA4CY,QAA5C,CAAP;AACD;;AAEDJ,SAAS,CAACK,WAAV,GAAwB,2BAAxB","names":["fieldToTextField","_a","_b","fieldOnBlur","field","_c","isSubmitting","touched","errors","onBlur","helperText","props","fieldError","getIn","name","showError","error","disabled","e","TextField","React","MuiTextField","__assign","children","displayName"],"sources":["C:\\Users\\Admin\\Desktop\\NameKart\\frontend\\node_modules\\formik-material-ui\\src\\TextField.tsx"],"sourcesContent":["import * as React from 'react';\nimport MuiTextField, {\n  TextFieldProps as MuiTextFieldProps,\n} from '@mui/material/TextField';\nimport { FieldProps, getIn } from 'formik';\n\nexport interface TextFieldProps\n  extends FieldProps,\n    Omit<MuiTextFieldProps, 'name' | 'value' | 'error'> {}\n\nexport function fieldToTextField({\n  disabled,\n  field: { onBlur: fieldOnBlur, ...field },\n  form: { isSubmitting, touched, errors },\n  onBlur,\n  helperText,\n  ...props\n}: TextFieldProps): MuiTextFieldProps {\n  const fieldError = getIn(errors, field.name);\n  const showError = getIn(touched, field.name) && !!fieldError;\n\n  return {\n    error: showError,\n    helperText: showError ? fieldError : helperText,\n    disabled: disabled ?? isSubmitting,\n    onBlur:\n      onBlur ??\n      function (e) {\n        fieldOnBlur(e ?? field.name);\n      },\n    ...field,\n    ...props,\n  };\n}\n\nexport function TextField({ children, ...props }: TextFieldProps) {\n  return <MuiTextField {...fieldToTextField(props)}>{children}</MuiTextField>;\n}\n\nTextField.displayName = 'FormikMaterialUITextField';\n"]},"metadata":{},"sourceType":"module"}