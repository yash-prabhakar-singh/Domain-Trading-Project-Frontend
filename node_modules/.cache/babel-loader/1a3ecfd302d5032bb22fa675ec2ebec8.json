{"ast":null,"code":"import { __rest, __assign } from './_virtual/_tslib.js';\nimport * as React from 'react';\nimport MuiToggleButtonGroup from '@mui/material/ToggleButtonGroup';\nimport invariant from 'tiny-warning';\n\nfunction fieldToToggleButtonGroup(_a) {\n  var _b = _a.field;\n  _b.onChange;\n\n  var fieldOnBlur = _b.onBlur,\n      field = __rest(_b, [\"onChange\", \"onBlur\"]),\n      type = _a.type,\n      onChange = _a.onChange,\n      onBlur = _a.onBlur,\n      form = _a.form,\n      props = __rest(_a, [\"field\", \"type\", \"onChange\", \"onBlur\", \"form\"]);\n\n  if (process.env.NODE_ENV !== 'production') {\n    invariant(type === 'checkbox', \"property type=checkbox is missing from field \" + field.name + \", this can caused unexpected behaviour\");\n\n    if (!props.exclusive) {\n      invariant(Array.isArray(field.value), \"value for \" + field.name + \" is not an array, this can caused unexpected behaviour\");\n    }\n  }\n\n  return __assign(__assign({\n    onBlur: onBlur !== null && onBlur !== void 0 ? onBlur : function () {\n      fieldOnBlur(field.name);\n    },\n    onChange: onChange !== null && onChange !== void 0 ? onChange : function (_event, newValue) {\n      form.setFieldValue(field.name, newValue);\n    }\n  }, field), props);\n}\n\nfunction ToggleButtonGroup(props) {\n  return React.createElement(MuiToggleButtonGroup, __assign({}, fieldToToggleButtonGroup(props)));\n}\n\nToggleButtonGroup.displayName = 'FormikMaterialUIToggleButtonGroup';\nexport { ToggleButtonGroup, fieldToToggleButtonGroup };","map":{"version":3,"mappings":";;;;;SAagBA,yBAAyBC,IAOhB;MANvBC;EAA6DA;;EAAjC,IAAUC,WAAW,YAArB;EAAA,IAA0BC,KAAK,cAApD,sBAAoD,CAA/B;EAAA,IAC5BC,IAAI,UADwB;EAAA,IAE5BC,QAAQ,cAFoB;EAAA,IAG5BC,MAAM,YAHsB;EAAA,IAI5BC,IAAI,UAJwB;EAAA,IAKzBC,KAAK,cAN+B,+CAM/B,CALoB;;EAO5B,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;IACzCC,SAAS,CACPR,IAAI,KAAK,UADF,EAEP,kDAAgDD,KAAK,CAACU,IAAtD,GAA0D,wCAFnD,CAAT;;IAKA,IAAI,CAACL,KAAK,CAACM,SAAX,EAAsB;MACpBF,SAAS,CACPG,KAAK,CAACC,OAAN,CAAcb,KAAK,CAACc,KAApB,CADO,EAEP,eAAad,KAAK,CAACU,IAAnB,GAAuB,wDAFhB,CAAT;IAID;EACF;;EAED;IACEP,MAAM,EACJA,MAAM,SAAN,UAAM,WAAN,YACA;MACEJ,WAAW,CAACC,KAAK,CAACU,IAAP,CAAX;IACD,CALL;IAMER,QAAQ,EACNA,QAAQ,SAAR,YAAQ,WAAR,cACA,UAAUa,MAAV,EAAkBC,QAAlB,EAA0B;MACxBZ,IAAI,CAACa,aAAL,CAAmBjB,KAAK,CAACU,IAAzB,EAA+BM,QAA/B;IACD;EAVL,GAWKhB,KAXL,GAYKK,KAZL;AAcD;;SAEea,kBAAkBb,OAA6B;EAC7D,OAAOc,oBAACC,oBAAD,EAAqBC,aAAKzB,wBAAwB,CAACS,KAAD,CAA7B,CAArB,CAAP;AACD;;AAEDa,iBAAiB,CAACI,WAAlB,GAAgC,mCAAhC","names":["fieldToToggleButtonGroup","_a","_b","fieldOnBlur","field","type","onChange","onBlur","form","props","process","env","NODE_ENV","invariant","name","exclusive","Array","isArray","value","_event","newValue","setFieldValue","ToggleButtonGroup","React","MuiToggleButtonGroup","__assign","displayName"],"sources":["C:\\Users\\Admin\\Desktop\\NameKart\\frontend\\node_modules\\formik-material-ui\\src\\ToggleButtonGroup.tsx"],"sourcesContent":["import * as React from 'react';\nimport MuiToggleButtonGroup, {\n  ToggleButtonGroupProps as MuiToggleButtonGroupProps,\n} from '@mui/material/ToggleButtonGroup';\nimport { FieldProps } from 'formik';\nimport invariant from 'tiny-warning';\n\nexport interface ToggleButtonGroupProps\n  extends FieldProps,\n    Omit<MuiToggleButtonGroupProps, 'name' | 'value' | 'error'> {\n  type?: string;\n}\n\nexport function fieldToToggleButtonGroup({\n  field: { onChange: _onChange, onBlur: fieldOnBlur, ...field },\n  type,\n  onChange,\n  onBlur,\n  form,\n  ...props\n}: ToggleButtonGroupProps): MuiToggleButtonGroupProps {\n  if (process.env.NODE_ENV !== 'production') {\n    invariant(\n      type === 'checkbox',\n      `property type=checkbox is missing from field ${field.name}, this can caused unexpected behaviour`\n    );\n\n    if (!props.exclusive) {\n      invariant(\n        Array.isArray(field.value),\n        `value for ${field.name} is not an array, this can caused unexpected behaviour`\n      );\n    }\n  }\n\n  return {\n    onBlur:\n      onBlur ??\n      function () {\n        fieldOnBlur(field.name);\n      },\n    onChange:\n      onChange ??\n      function (_event, newValue) {\n        form.setFieldValue(field.name, newValue);\n      },\n    ...field,\n    ...props,\n  };\n}\n\nexport function ToggleButtonGroup(props: ToggleButtonGroupProps) {\n  return <MuiToggleButtonGroup {...fieldToToggleButtonGroup(props)} />;\n}\n\nToggleButtonGroup.displayName = 'FormikMaterialUIToggleButtonGroup';\n"]},"metadata":{},"sourceType":"module"}