{"ast":null,"code":"import { __assign } from './_virtual/_tslib.js';\nimport * as React from 'react';\nimport { getIn } from 'formik';\nimport FormControl from '@mui/material/FormControl';\nimport InputLabel from '@mui/material/InputLabel';\nimport Input from '@mui/material/Input';\nimport FormHelperText from '@mui/material/FormHelperText';\n\nvar SimpleFileUpload = function (_a) {\n  var field = _a.field,\n      _b = _a.form,\n      isSubmitting = _b.isSubmitting,\n      touched = _b.touched,\n      errors = _b.errors,\n      setFieldValue = _b.setFieldValue,\n      label = _a.label,\n      accept = _a.accept,\n      _c = _a.disabled,\n      disabled = _c === void 0 ? false : _c,\n      inputProps = _a.InputProps,\n      inputLabelProps = _a.InputLabelProps,\n      formControlProps = _a.FormControlProps;\n  var error = getIn(touched, field.name) && getIn(errors, field.name);\n  return React.createElement(FormControl, __assign({}, formControlProps), label && React.createElement(InputLabel, __assign({\n    shrink: true,\n    error: !!error\n  }, inputLabelProps), label), React.createElement(Input, __assign({\n    error: !!error,\n    inputProps: {\n      type: 'file',\n      accept: accept,\n      disabled: disabled || isSubmitting,\n      name: field.name,\n      onChange: function (event) {\n        if (inputProps === null || inputProps === void 0 ? void 0 : inputProps.onChange) {\n          inputProps.onChange(event);\n        } else {\n          var file = event.currentTarget.files[0];\n          setFieldValue(field.name, file);\n        }\n      }\n    }\n  }, inputProps)), error && React.createElement(FormHelperText, {\n    error: true\n  }, error));\n};\n\nexport { SimpleFileUpload };","map":{"version":3,"mappings":";;;;;;;;IAgBaA,gBAAgB,GAAG,UAACC,EAAD,EASR;MARtBC,KAAK;MACLC;MAAQC,YAAY;MAAEC,OAAO;MAAEC,MAAM;MAAEC,aAAa;MACpDC,KAAK;MACLC,MAAM;MACNC;MAAAC,QAAQ,mBAAG,KAAH,GAAQD;MACJE,UAAU;MACLC,eAAe;MACdC,gBAAgB;EAElC,IAAMC,KAAK,GAAGC,KAAK,CAACX,OAAD,EAAUH,KAAK,CAACe,IAAhB,CAAL,IAA8BD,KAAK,CAACV,MAAD,EAASJ,KAAK,CAACe,IAAf,CAAjD;EAEA,OACEC,oBAACC,WAAD,EAAYC,aAAKN,gBAAL,CAAZ,EACGN,KAAK,IACJU,oBAACG,UAAD,EAAWD;IAACE,MAAM,MAAP;IAAQP,KAAK,EAAE,CAAC,CAACA;EAAjB,GAA4BF,eAA5B,CAAX,EACGL,KADH,CAFJ,EAMEU,oBAACK,KAAD,EAAMH;IACJL,KAAK,EAAE,CAAC,CAACA,KADL;IAEJH,UAAU,EAAE;MACVY,IAAI,EAAE,MADI;MAEVf,MAAM,QAFI;MAGVE,QAAQ,EAAEA,QAAQ,IAAIP,YAHZ;MAIVa,IAAI,EAAEf,KAAK,CAACe,IAJF;MAMVQ,QAAQ,EAAE,UAACC,KAAD,EAA8B;QACtC,IAAId,UAAU,SAAV,cAAU,WAAV,GAAU,MAAV,aAAU,CAAEa,QAAhB,EAA0B;UACxBb,UAAU,CAACa,QAAX,CAAoBC,KAApB;QACD,CAFD,MAEO;UACL,IAAMC,IAAI,GAAGD,KAAK,CAACE,aAAN,CAAoBC,KAApB,CAA0B,CAA1B,CAAb;UACAtB,aAAa,CAACL,KAAK,CAACe,IAAP,EAAaU,IAAb,CAAb;QACD;MACF;IAbS;EAFR,GAiBAf,UAjBA,CAAN,CANF,EAyBGG,KAAK,IAAIG,oBAACY,cAAD,EAAe;IAACf,KAAK;EAAN,CAAf,EAAuBA,KAAvB,CAzBZ,CADF;AA6BF","names":["SimpleFileUpload","_a","field","_b","isSubmitting","touched","errors","setFieldValue","label","accept","_c","disabled","inputProps","inputLabelProps","formControlProps","error","getIn","name","React","FormControl","__assign","InputLabel","shrink","Input","type","onChange","event","file","currentTarget","files","FormHelperText"],"sources":["C:\\Users\\Admin\\Desktop\\NameKart\\frontend\\node_modules\\formik-material-ui\\src\\SimpleFileUpload.tsx"],"sourcesContent":["import * as React from 'react';\nimport { FieldProps, getIn } from 'formik';\nimport FormControl, { FormControlProps } from '@mui/material/FormControl';\nimport InputLabel, { InputLabelProps } from '@mui/material/InputLabel';\nimport Input, { InputProps } from '@mui/material/Input';\nimport FormHelperText from '@mui/material/FormHelperText';\n\nexport interface SimpleFileUploadProps extends FieldProps {\n  label: string;\n  accept: string;\n  disabled?: boolean;\n  InputProps?: Omit<InputProps, 'name' | 'type' | 'label'>;\n  InputLabelProps?: InputLabelProps;\n  FormControlProps?: FormControlProps;\n}\n\nexport const SimpleFileUpload = ({\n  field,\n  form: { isSubmitting, touched, errors, setFieldValue },\n  label,\n  accept,\n  disabled = false,\n  InputProps: inputProps,\n  InputLabelProps: inputLabelProps,\n  FormControlProps: formControlProps,\n}: SimpleFileUploadProps) => {\n  const error = getIn(touched, field.name) && getIn(errors, field.name);\n\n  return (\n    <FormControl {...formControlProps}>\n      {label && (\n        <InputLabel shrink error={!!error} {...inputLabelProps}>\n          {label}\n        </InputLabel>\n      )}\n      <Input\n        error={!!error}\n        inputProps={{\n          type: 'file',\n          accept,\n          disabled: disabled || isSubmitting,\n          name: field.name,\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          onChange: (event: React.ChangeEvent<any>) => {\n            if (inputProps?.onChange) {\n              inputProps.onChange(event);\n            } else {\n              const file = event.currentTarget.files[0];\n              setFieldValue(field.name, file);\n            }\n          },\n        }}\n        {...inputProps}\n      />\n      {error && <FormHelperText error>{error}</FormHelperText>}\n    </FormControl>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}