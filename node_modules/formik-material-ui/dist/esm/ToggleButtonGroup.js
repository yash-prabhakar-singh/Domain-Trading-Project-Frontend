import { __rest, __assign } from './_virtual/_tslib.js';
import * as React from 'react';
import MuiToggleButtonGroup from '@mui/material/ToggleButtonGroup';
import invariant from 'tiny-warning';

function fieldToToggleButtonGroup(_a) {
    var _b = _a.field; _b.onChange; var fieldOnBlur = _b.onBlur, field = __rest(_b, ["onChange", "onBlur"]), type = _a.type, onChange = _a.onChange, onBlur = _a.onBlur, form = _a.form, props = __rest(_a, ["field", "type", "onChange", "onBlur", "form"]);
    if (process.env.NODE_ENV !== 'production') {
        invariant(type === 'checkbox', "property type=checkbox is missing from field " + field.name + ", this can caused unexpected behaviour");
        if (!props.exclusive) {
            invariant(Array.isArray(field.value), "value for " + field.name + " is not an array, this can caused unexpected behaviour");
        }
    }
    return __assign(__assign({ onBlur: onBlur !== null && onBlur !== void 0 ? onBlur : function () {
            fieldOnBlur(field.name);
        }, onChange: onChange !== null && onChange !== void 0 ? onChange : function (_event, newValue) {
            form.setFieldValue(field.name, newValue);
        } }, field), props);
}
function ToggleButtonGroup(props) {
    return React.createElement(MuiToggleButtonGroup, __assign({}, fieldToToggleButtonGroup(props)));
}
ToggleButtonGroup.displayName = 'FormikMaterialUIToggleButtonGroup';

export { ToggleButtonGroup, fieldToToggleButtonGroup };
//# sourceMappingURL=ToggleButtonGroup.js.map
