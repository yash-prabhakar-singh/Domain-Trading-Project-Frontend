{"version":3,"file":"Autocomplete.js","sources":["../../src/Autocomplete.tsx"],"sourcesContent":["import * as React from 'react';\nimport MuiAutocomplete, {\n  AutocompleteProps as MuiAutocompleteProps,\n} from '@mui/material/Autocomplete';\nimport { FieldProps } from 'formik';\nimport invariant from 'tiny-warning';\n\nexport { AutocompleteRenderInputParams } from '@mui/material/Autocomplete';\n\nexport interface AutocompleteProps<\n  T,\n  Multiple extends boolean | undefined,\n  DisableClearable extends boolean | undefined,\n  FreeSolo extends boolean | undefined\n> extends FieldProps,\n    Omit<\n      MuiAutocompleteProps<T, Multiple, DisableClearable, FreeSolo>,\n      'name' | 'value' | 'defaultValue'\n    > {\n  type?: string;\n}\n\nexport function fieldToAutocomplete<\n  T,\n  Multiple extends boolean | undefined,\n  DisableClearable extends boolean | undefined,\n  FreeSolo extends boolean | undefined\n>({\n  disabled,\n  field,\n  form: { isSubmitting, setFieldValue },\n  type,\n  onChange,\n  onBlur,\n  freeSolo,\n  ...props\n}: AutocompleteProps<\n  T,\n  Multiple,\n  DisableClearable,\n  FreeSolo\n>): MuiAutocompleteProps<T, Multiple, DisableClearable, FreeSolo> {\n  if (process.env.NODE_ENV !== 'production') {\n    if (props.multiple) {\n      invariant(\n        Array.isArray(field.value),\n        `value for ${field.name} is not an array, this can caused unexpected behaviour`\n      );\n    }\n  }\n\n  const {\n    onChange: _onChange,\n    onBlur: _onBlur,\n    multiple: _multiple,\n    ...fieldSubselection\n  } = field;\n\n  return {\n    freeSolo,\n    onBlur:\n      onBlur ??\n      function (event) {\n        field.onBlur(event ?? field.name);\n      },\n    onChange:\n      onChange ??\n      function (_event, value) {\n        setFieldValue(field.name, value);\n      },\n    disabled: disabled ?? isSubmitting,\n    loading: isSubmitting,\n    ...fieldSubselection,\n    ...props,\n  };\n}\n\nexport function Autocomplete<\n  T,\n  Multiple extends boolean | undefined,\n  DisableClearable extends boolean | undefined,\n  FreeSolo extends boolean | undefined\n>(props: AutocompleteProps<T, Multiple, DisableClearable, FreeSolo>) {\n  return <MuiAutocomplete {...fieldToAutocomplete(props)} />;\n}\n\nAutocomplete.displayName = 'FormikMaterialUIAutocomplete';\n"],"names":[],"mappings":";;;;;SAsBgB,mBAAmB,CAKjC,EAcD;QAbC,QAAQ,cAAA,EACR,KAAK,WAAA,EACL,YAAqC,EAA7B,YAAY,kBAAA,EAAE,aAAa,mBAAA,SAC/B,MACJ,QAAQ,cAAA,EACR,MAAM,YAAA,EACN,QAAQ,cAAA,EACL,KAAK,cARR,uEASD;IAMC,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE;QACzC,IAAI,KAAK,CAAC,QAAQ,EAAE;YAClB,SAAS,CACP,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,EAC1B,eAAa,KAAK,CAAC,IAAI,2DAAwD,CAChF,CAAC;SACH;KACF;IAOG,KAAK,SAJY,EAIjB,KAAK,OAHQ,EAGb,KAAK,SAFY,MAChB,iBAAiB,UAClB,KAAK,EALH,kCAKL,EAAS;IAEV,2BACE,QAAQ,UAAA,EACR,MAAM,EACJ,MAAM,aAAN,MAAM,cAAN,MAAM,GACN,UAAU,KAAK;YACb,KAAK,CAAC,MAAM,CAAC,KAAK,aAAL,KAAK,cAAL,KAAK,GAAI,KAAK,CAAC,IAAI,CAAC,CAAC;SACnC,EACH,QAAQ,EACN,QAAQ,aAAR,QAAQ,cAAR,QAAQ,GACR,UAAU,MAAM,EAAE,KAAK;YACrB,aAAa,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;SAClC,EACH,QAAQ,EAAE,QAAQ,aAAR,QAAQ,cAAR,QAAQ,GAAI,YAAY,EAClC,OAAO,EAAE,YAAY,IAClB,iBAAiB,GACjB,KAAK,EACR;AACJ,CAAC;SAEe,YAAY,CAK1B,KAAiE;IACjE,OAAO,oBAAC,eAAe,eAAK,mBAAmB,CAAC,KAAK,CAAC,EAAI,CAAC;AAC7D,CAAC;AAED,YAAY,CAAC,WAAW,GAAG,8BAA8B;;;;"}